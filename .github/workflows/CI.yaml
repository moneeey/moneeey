name: CI/CD

on: push

jobs:
  SETUP:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-deps.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        id: cache-deps
        with:
          path: |
            ~/.cache/yarn
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - uses: actions/setup-node@v3
        with:
          node-version: "20.11"
          cache: yarn

  LINT:
    runs-on: ubuntu-latest
    needs: SETUP
    steps:
      - run: yarn lint
        name: Lint

  FRONTEND:
    runs-on: ubuntu-latest
    needs: SETUP
    defaults:
      run:
        working-directory: frontend
    steps:
      - run: yarn test
        name: Test

      - name: Run Playwright tests using Docker
        uses: addnab/docker-run-action@v3
        with:
          image: mcr.microsoft.com/playwright:v1.36.1-jammy
          options: --rm -v ${{ github.workspace }}:/workspace
          run: |
            cd /workspace/playwright
            export CI=true
            yarn test

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: |
            playwright/playwright-report/
            playwright/test-results/videos/
          retention-days: 30

  BACKEND:
    runs-on: ubuntu-latest
    needs: SETUP
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.35.3

      - run: deno test --allow-all
        name: Test

  PACKAGE:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [FRONTEND, BACKEND]
    strategy:
      matrix:
        service: [backend, frontend]
    permissions:
      contents: read
      packages: write
      id-token: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}-${{ matrix.service }}
    defaults:
      run:
        working-directory: ${{ matrix.service }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v5

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: docker-${{ runner.os }}-${{ hashFiles('**/Dockerfile.prod', '**/package.json', '**/yarn.lock') }}
          restore-keys: |
            docker-${{ runner.os }}-

      - name: Log into Github Docker registry
        uses: docker/login-action@v5
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile.prod
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
